# This file was created by Dave Hilditch from www.wpintense.com as part of his WordPress cluster build - use this file to get WordPress installed before you use the other file which is SSL enabled


server {

        listen 80 default_server;

        server_name _;
        
        include snippets/acme-challenge.conf;

        root /var/www/wpicluster;

        keepalive_timeout 60;

        access_log /var/log/nginx/wpicluster_access.log;
        error_log /var/log/nginx/wpicluster_error.log;
        index index.html index.htm index.php;

        client_max_body_size  128M;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_proxied any;
		gzip on;
    	gzip_buffers  4 32k;

        gzip_types application/atom+xml
          application/javascript
          application/json
          application/ld+json
          application/manifest+json
          application/rdf+xml
          application/rss+xml
          application/schema+json
          application/vnd.geo+json
          application/vnd.ms-fontobject
          application/x-font-ttf
          application/x-javascript
          application/x-web-app-manifest+json
          application/xhtml+xml
          application/xml
          font/eot
          font/opentype
          image/bmp
          image/svg+xml
          image/vnd.microsoft.icon
          image/x-icon
          text/cache-manifest
          text/css
          text/javascript
          text/plain
          text/vcard
          text/vnd.rim.location.xloc
          text/vtt
          text/x-component
          text/x-cross-domain-policy
          text/xml;

		gzip_vary on;

        rewrite /wp-admin$ $scheme://$host$uri/ permanent;

        # Disallow access to hidden files and directories
        location ~ /\. {
                return 404;
        }

        location = /favicon.ico {
                try_files /favicon.ico =204;
                access_log off;
                log_not_found off;
        }

        location = /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1/32;
                allow ::1/128;
                allow 192.241.242.236;
                allow 10.13.0.5;
                deny all;
        }

        include /etc/nginx/sites-default.d/*.conf;

        location ~ /(\.|wp-config.php|readme.html|license.txt|wp-cli.local.yml|wp-cli.yml) {
                return 404;
        }

        location ~* ^.+\.(css|js|ogg|ogv|svg|svgz|eot|otf|woff|mp3|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
                access_log off;
                expires max;
                add_header Cache-Control "public";
        }

        location = /robots.txt {
                access_log off;
                log_not_found off;
                try_files /robots.txt /index.php;
        }

        location / {
                try_files $uri $uri/ /index.php?$args;
        }



        location ~ ^(?!.+\.php/)(?<script_name>.+\.php)$ {
                limit_except GET HEAD POST { deny all; }

                try_files $script_name =404;

                include fastcgi.conf;

                set $php_https off;

                if ($http_x_forwarded_proto = "https") {
                  set $php_https on;
                }

                fastcgi_param HTTPS $php_https;
                fastcgi_next_upstream error timeout invalid_header http_500;

                # Mitigate HTTPOXY attacks (https://httpoxy.org/)
                fastcgi_param HTTP_PROXY "";

                fastcgi_index index.php;
                fastcgi_pass php-wordpress;
        }

        location ~ ^(?<script_name>.+\.php)(?<path_info>/.*)$ {
                limit_except GET HEAD POST { deny all; }

                try_files $script_name =404;

                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$script_name;
                fastcgi_param PATH_INFO $path_info;
                #fastcgi_param PATH_TRANSLATED $document_root$path_info;

                set $php_https off;

                if ($http_x_forwarded_proto = "https") {
                  set $php_https on;
                }

                fastcgi_param HTTPS $php_https;
                fastcgi_next_upstream error timeout invalid_header http_500;

                # Mitigate HTTPOXY attacks (https://httpoxy.org/)
                fastcgi_param HTTP_PROXY "";

                fastcgi_index index.php;
                fastcgi_pass php-wordpress;
        }


}
